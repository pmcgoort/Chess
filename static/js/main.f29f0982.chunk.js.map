{"version":3,"sources":["check.js","canMove.js","checkmate.js","stalemate.js","Main.js","App.js","reportWebVitals.js","index.js"],"names":["check","board","turn","isCheck","kingPos","i","j","push","k","m","canMove","endOfTurn","canCastle","change","n","rowDiff","Math","abs","colDiff","rowChange","colChange","rowSpot","colSpot","place","tempBoard","checkmate","tempTurn","stalemate","pieceCount","Main","props","clicked","correctTurn","state","setState","move","changePawn","e","message","bind","reset","this","pawnChange","id","map","index","class","jndex","piece","squareColor","onClick","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f29f0982.chunk.js","sourcesContent":["import {canMove} from './canMove';\r\n\r\nexport const check = function(board, turn){\r\n  var isCheck = false\r\n  var kingPos = []\r\n\r\n  /*finds position of king*/\r\n  for(let i = 0; i <= 7; i++){\r\n    for(let j = 0; j <= 7; j++){\r\n      if(board[i][j][0] !== turn[0] && board[i][j][1] === 'K'){\r\n        kingPos.push(i)\r\n        kingPos.push(j)\r\n      }\r\n    }\r\n  }\r\n\r\n  /*cycles through each piece to see if it can move to king's position*/\r\n  for(let k = 0; k <= 7; k++){\r\n    for(let m = 0; m <= 7; m++){\r\n      if(canMove(board, k, m, kingPos[0], kingPos[1],turn, true, [[, [,]], [, [,]]])){\r\n        isCheck = true\r\n      }\r\n    }\r\n  }\r\n\r\n  return isCheck\r\n}\r\n","import {check} from './check';\r\n\r\nexport const canMove = function(board, k, m, i, j, turn, endOfTurn, canCastle) {\r\n\r\n  if (board[i][j][0] === board[k][m][0]) {\r\n    return false\r\n  }\r\n\r\n  var canMove = false\r\n  switch (board[k][m][1]) {\r\n    /*Pawn*/\r\n    case 'P':\r\n      if (m === j && board[i][j] === ' ') {\r\n        if (board[k][m][0] === 'B') {\r\n          if (i === k - 1 || (i === k - 2 && k === 6)) {\r\n            canMove = true\r\n          }\r\n        } else {\r\n          if (i === k + 1 || (i === k + 2 && k === 1)) {\r\n            canMove = true\r\n          }\r\n        }\r\n      }\r\n      if (m === j + 1 || m === j - 1) {\r\n        if (board[k][m][0] === 'B' && board[i][j][0] === 'W' && i === k - 1) {\r\n          canMove = true\r\n        } else if (board[k][m][0] === 'W' && board[i][j][0] === 'B' && i === k + 1) {\r\n          canMove = true\r\n        }\r\n      }\r\n\r\n      break\r\n\r\n      /*Rook*/\r\n    case 'R':\r\n      var change = 1\r\n      if (k === i) {\r\n        if (m === j) {\r\n          break\r\n        }\r\n        if (m > j) {\r\n          change = -1\r\n        }\r\n        canMove = true\r\n        for (let n = m + change; n !== j; n += change) {\r\n          if (board[i][n] === ' ') {\r\n            canMove = true\r\n          } else {\r\n            canMove = false\r\n            break\r\n          }\r\n        }\r\n      } else if (m === j) {\r\n        if (k > i) {\r\n          change = -1\r\n        }\r\n        canMove = true\r\n        for (let n = k + change; n !== i; n += change) {\r\n          if (board[n][j] === ' ') {\r\n            canMove = true\r\n          } else {\r\n            canMove = false\r\n            break\r\n          }\r\n        }\r\n      }\r\n      break\r\n\r\n      /*Knight*/\r\n    case 'N':\r\n      var rowDiff = Math.abs(i - k)\r\n      var colDiff = Math.abs(j - m)\r\n\r\n      if ((rowDiff === 1 && colDiff === 2) || (rowDiff === 2 && colDiff === 1)) {\r\n        canMove = true\r\n      }\r\n      break\r\n\r\n      /*Bishop*/\r\n    case 'B':\r\n      if (Math.abs(i - k) === Math.abs(j - m) && Math.abs(i - k) !== 0) {\r\n        canMove = true\r\n        var rowChange = 1\r\n        var colChange = 1\r\n        if (i < k) {\r\n          rowChange = -1\r\n        }\r\n        if (j < m) {\r\n          colChange = -1\r\n        }\r\n\r\n        var rowSpot = k + rowChange\r\n        var colSpot = m + colChange\r\n        while (rowSpot !== i) {\r\n          if (board[rowSpot][colSpot] !== ' ') {\r\n            canMove = false\r\n          }\r\n          rowSpot += rowChange\r\n          colSpot += colChange\r\n        }\r\n      }\r\n      break\r\n\r\n      /*Queen*/\r\n    case 'Q':\r\n      if (Math.abs(i - k) === Math.abs(j - m) && Math.abs(i - k) !== 0) {\r\n        canMove = true\r\n        var rowChange = 1\r\n        var colChange = 1\r\n        if (i < k) {\r\n          rowChange = -1\r\n        }\r\n        if (j < m) {\r\n          colChange = -1\r\n        }\r\n\r\n        var rowSpot = k + rowChange\r\n        var colSpot = m + colChange\r\n        while (rowSpot !== i) {\r\n          if (board[rowSpot][colSpot] !== ' ') {\r\n            canMove = false\r\n          }\r\n          rowSpot += rowChange\r\n          colSpot += colChange\r\n        }\r\n      }\r\n      if (!canMove) {\r\n        var change = 1\r\n        if (k === i) {\r\n          if (m === j) {\r\n            break\r\n          }\r\n          if (m > j) {\r\n            change = -1\r\n          }\r\n          canMove = true\r\n          for (let n = m + change; n !== j; n += change) {\r\n            if (board[i][n] === ' ') {\r\n              canMove = true\r\n            } else {\r\n              canMove = false\r\n              break\r\n            }\r\n          }\r\n        } else if (m === j) {\r\n          if (k > i) {\r\n            change = -1\r\n          }\r\n          canMove = true\r\n          for (let n = k + change; n !== i; n += change) {\r\n            if (board[n][j] === ' ') {\r\n              canMove = true\r\n            } else {\r\n              canMove = false\r\n              break\r\n            }\r\n          }\r\n        }\r\n      }\r\n      break\r\n\r\n      /*King*/\r\n    case 'K':\r\n      if (Math.abs(i - k) <= 1 && Math.abs(j - m) <= 1) {\r\n        canMove = true\r\n      }\r\n\r\n      /*castling*/\r\n      var place = 1\r\n      if(board[k][m][0] === 'W'){\r\n        place = 0\r\n      }\r\n      if(canCastle[place][0]){\r\n        if(j === 2 && canCastle[place][1][0] && board[place * 7][1] === ' ' && board[place * 7][2] === ' ' && board[place * 7][3] === ' '){\r\n          canMove = true\r\n        }\r\n        if(j === 6 && canCastle[place][1][1] && board[place * 7][5] === ' ' && board[place * 7][6] === ' '){\r\n          canMove = true\r\n        }\r\n      }\r\n\r\n      break;\r\n\r\n    default:\r\n      break\r\n  }\r\n\r\n\r\n  /*checks if this move would put their own king into check*/\r\n  if(!endOfTurn){\r\n    var tempBoard = []\r\n    for(let i = 0; i <= 7; i++){\r\n      tempBoard.push([...board[i]])\r\n    }\r\n    tempBoard[i][j] = tempBoard[k][m]\r\n    tempBoard[k][m] = ' '\r\n\r\n    var tempTurn\r\n    if(turn === 'White'){\r\n      tempTurn = 'Black'\r\n    } else {\r\n      tempTurn = 'White'\r\n    }\r\n\r\n    if(check(tempBoard, tempTurn)){\r\n      canMove = false\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  return canMove\r\n}\r\n","import {canMove} from './canMove';\r\n\r\nexport const checkmate = function(board, turn){\r\n\r\n  var tempTurn = 'White'\r\n  if(turn === 'White'){\r\n    tempTurn = 'Black'\r\n  }\r\n\r\n  /*will search through and see if any piece can make a move that gets out of check*/\r\n  for(let i = 0; i <= 7; i++){\r\n    for(let j = 0; j <= 7; j++){\r\n      if(board[i][j] !== ' ' && board[i][j][0] !== turn[0]){\r\n        for(let k = 0; k <= 7; k++){\r\n          for(let m = 0; m <= 7; m++){\r\n            if(canMove(board, i, j, k, m, tempTurn, false, [[, [,]], [, [,]]])){\r\n              return false\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return true\r\n}\r\n","import {canMove} from './canMove';\r\n\r\nexport const stalemate = function(board, turn){\r\n\r\n  var tempTurn = 'White'\r\n  if(turn === 'White'){\r\n    tempTurn = 'Black'\r\n  }\r\n\r\n  var pieceCount = 0\r\n  /*checks to see if kings are only pieces left*/\r\n  for(let i = 0; i <= 7; i++){\r\n    for(let j = 0; j <= 7; j++){\r\n      if(board[i][j] !== ' '){\r\n        pieceCount++\r\n      }\r\n    }\r\n  }\r\n\r\n  if(pieceCount === 2){\r\n    return true\r\n  }\r\n\r\n  /*will search through and see if any piece can make a move that gets out of check*/\r\n  for(let i = 0; i <= 7; i++){\r\n    for(let j = 0; j <= 7; j++){\r\n      if(board[i][j] !== ' ' && board[i][j][0] !== turn[0]){\r\n        for(let k = 0; k <= 7; k++){\r\n          for(let m = 0; m <= 7; m++){\r\n            if(canMove(board, i, j, k, m, tempTurn, false, [[, [,]], [, [,]]])){\r\n              return false\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  return true\r\n}\r\n","import React, { Component } from 'react';\r\nimport {canMove} from './canMove';\r\nimport {check} from './check';\r\nimport {checkmate} from './checkmate';\r\nimport {stalemate} from './stalemate';\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      board: [['WR','WN','WB','WQ','WK','WB','WN','WR'],\r\n              ['WP','WP','WP','WP','WP','WP','WP','WP'],\r\n              [' ',' ',' ',' ',' ',' ',' ',' '],\r\n              [' ',' ',' ',' ',' ',' ',' ',' '],\r\n              [' ',' ',' ',' ',' ',' ',' ',' '],\r\n              [' ',' ',' ',' ',' ',' ',' ',' '],\r\n              ['BP','BP','BP','BP','BP','BP','BP','BP'],\r\n              ['BR','BN','BB','BQ','BK','BB','BN','BR']],\r\n      clicked: [false, 8, 8, 8, 8],\r\n      turn: 'White',\r\n      message: '',\r\n      canCastle: [[true, [true, true]], [true, [true, true]]],\r\n      changePawn: false\r\n    }\r\n    this.move = this.move.bind(this)\r\n    this.clicked = this.clicked.bind(this)\r\n    this.reset = this.reset.bind(this)\r\n    this.changePawn = this.changePawn.bind(this)\r\n  }\r\n\r\n  move(){\r\n\r\n    var board = this.state.board\r\n  /*i=final row, j=final col, k=initial row, m=initial col*/\r\n    var k = this.state.clicked[1]\r\n    var m = this.state.clicked[2]\r\n    var i = this.state.clicked[3]\r\n    var j = this.state.clicked[4]\r\n\r\n    /*determines based on piece if that piece can perfom move*/\r\n    if(canMove(board, k, m, i, j, this.state.turn, false, this.state.canCastle)){\r\n      board[i][j] = board[k][m]\r\n      board[k][m] = ' '\r\n      var turn = 'White'\r\n      if(this.state.turn === 'White'){\r\n        turn = 'Black'\r\n      }\r\n      /*changes if castle or king moves to not allow castling in the future*/\r\n      var canCastle = this.state.canCastle\r\n      if(k === 0){\r\n        if(m === 0){\r\n          canCastle[0][1][0] = false\r\n        } else if(m === 7){\r\n          canCastle[0][1][1] = false\r\n        } else if(m === 4){\r\n          canCastle[0][0] = false\r\n        }\r\n      } else if(k === 7){\r\n          if(m === 0){\r\n            canCastle[1][1][0] = false\r\n          } else if(m === 7){\r\n            canCastle[1][1][1] = false\r\n          } else if(m === 4){\r\n            canCastle[1][0] = false\r\n          }\r\n        }\r\n        /*moving the rook when castling*/\r\n        if(board[i][j][1] === 'K' && Math.abs(j - m) === 2){\r\n          if(j === 2){\r\n            board[i][3] = board[i][0]\r\n            board[i][0] = ' '\r\n          } else {\r\n            board[i][5] = board[i][7]\r\n            board[i][7] = ' '\r\n          }\r\n        }\r\n\r\n      this.setState({\r\n        board: board,\r\n        clicked: [false, 8, 8, 8, 8],\r\n        turn: turn,\r\n        canCastle: canCastle\r\n      })\r\n    } else {\r\n      this.setState({\r\n        clicked: [false, 8, 8, 8, 8]\r\n      })\r\n      return\r\n    }\r\n    var message = ''\r\n    if(check(board, this.state.turn)){\r\n      if(checkmate(board, this.state.turn)){\r\n        message = 'Checkmate'\r\n      } else {\r\n        message = 'Check'\r\n      }\r\n    } else if(stalemate(board, this.state.turn)){\r\n      message = 'Stalemate'\r\n    }\r\n    this.setState({\r\n      message: message\r\n    })\r\n  }\r\n\r\n  clicked = (i, j) => () => {\r\n    var correctTurn = false\r\n    if(this.state.board[i][j][0] === this.state.turn[0]){\r\n        correctTurn = true\r\n    }\r\n\r\n    if(this.state.board[i][j] !== ' ' && !this.state.clicked[0] && correctTurn){\r\n      this.setState((state) => ({\r\n        clicked: [true, i, j, 8, 8]\r\n      }))\r\n    } else if(this.state.clicked[0]){\r\n        var clicked = this.state.clicked\r\n        clicked[3] = i\r\n        clicked[4] = j\r\n        this.setState({\r\n          clicked: clicked\r\n        })\r\n        this.move()\r\n      }\r\n  }\r\n\r\n  reset(){\r\n    this.setState({\r\n      board: [['WR','WN','WB','WQ','WK','WB','WN','WR'],\r\n              ['WP','WP','WP','WP','WP','WP','WP','WP'],\r\n              [' ',' ',' ',' ',' ',' ',' ',' '],\r\n              [' ',' ',' ',' ',' ',' ',' ',' '],\r\n              [' ',' ',' ',' ',' ',' ',' ',' '],\r\n              [' ',' ',' ',' ',' ',' ',' ',' '],\r\n              ['BP','BP','BP','BP','BP','BP','BP','BP'],\r\n              ['BR','BN','BB','BQ','BK','BB','BN','BR']],\r\n      clicked: [false, 8, 8, 8, 8],\r\n      turn: 'White',\r\n      message: '',\r\n      canCastle: [[true, [true, true]], [true, [true, true]]],\r\n      changePawn: false\r\n    })\r\n  }\r\n\r\n  changePawn = (e) => () => {\r\n    var board = this.state.board\r\n    for(let i = 0; i <= 7; i += 7){\r\n      for(let j = 0; j <= 7; j++){\r\n        if(board[i][j][1] === 'P'){\r\n          board[i][j] = board[i][j][0] + e\r\n        }\r\n      }\r\n    }\r\n    this.setState({\r\n      board: board\r\n    })\r\n\r\n    var turn = 'White'\r\n    if(this.state.turn === 'White'){\r\n      turn = 'Black'\r\n    }\r\n\r\n    var message = ''\r\n    if(check(board, turn)){\r\n      if(checkmate(board, turn)){\r\n        message = 'Checkmate'\r\n      } else {\r\n        message = 'Check'\r\n      }\r\n    } else if(stalemate(board, turn)){\r\n      message = 'Stalemate'\r\n    }\r\n    this.setState({\r\n      message: message\r\n    })\r\n  }\r\n\r\n  render(){\r\n    const board = this.state.board\r\n    var pawnChange = 'hide'\r\n\r\n    for(let i = 0; i <= 7; i += 7){\r\n      for(let j = 0; j <= 7; j++){\r\n        if(board[i][j][1] === 'P'){\r\n          pawnChange = 'show'\r\n        }\r\n      }\r\n    }\r\n\r\n    var turn = '\\u2659'\r\n    if(this.state.turn === 'Black'){\r\n      turn = '\\u265F'\r\n    }\r\n\r\n    return(\r\n      <div id=\"main\">\r\n        {\r\n          board.map((i, index) => {\r\n            return(\r\n            <div class='newRow'>\r\n            {\r\n              i.map((j, jndex) => {\r\n                var squareColor = 'blackSquare square'\r\n                if((index + jndex) % 2 === 1){\r\n                  squareColor = 'whiteSquare square'\r\n                }\r\n                if((index === this.state.clicked[1] && jndex === this.state.clicked[2])){\r\n                  squareColor = 'clickedSquare square'\r\n                }\r\n\r\n                /*assigns the piece icon to each square*/\r\n                var piece\r\n\r\n                switch (board[index][jndex]){\r\n                  case 'WK':\r\n                    piece = '\\u2654'\r\n                  break;\r\n\r\n                  case 'WQ':\r\n                    piece = '\\u2655'\r\n                  break\r\n\r\n                  case 'WR':\r\n                    piece = '\\u2656'\r\n                  break\r\n\r\n                  case 'WB':\r\n                    piece = '\\u2657'\r\n                  break\r\n\r\n                  case 'WN':\r\n                    piece = '\\u2658'\r\n                  break\r\n\r\n                  case 'WP':\r\n                    piece = '\\u2659'\r\n                  break\r\n\r\n\r\n                  case 'BK':\r\n                    piece = '\\u265A'\r\n                  break;\r\n\r\n                  case 'BQ':\r\n                    piece = '\\u265B'\r\n                  break\r\n\r\n                  case 'BR':\r\n                    piece = '\\u265C'\r\n                  break\r\n\r\n                  case 'BB':\r\n                    piece = '\\u265D'\r\n                  break\r\n\r\n                  case 'BN':\r\n                    piece = '\\u265E'\r\n                  break\r\n\r\n                  case 'BP':\r\n                    piece = '\\u265F'\r\n                  break\r\n\r\n                  default:\r\n                  break;\r\n                }\r\n                if(this.state.message !== 'Checkmate' && this.state.message !== 'Stalemate'){\r\n                  return(\r\n                    <div class={squareColor} onClick={this.clicked(index, jndex)}>\r\n                      <div class='piece'>{piece}</div>\r\n                    </div>\r\n                  )\r\n                } else {\r\n                  return(\r\n                    <div class={squareColor}>\r\n                      <div class='piece'>{piece}</div>\r\n                    </div>\r\n                  )\r\n                }\r\n              })\r\n            }\r\n            </div>\r\n          )\r\n          })\r\n        }\r\n        <button id='reset' onClick={this.reset}>Reset</button>\r\n        <p id='turn'>{turn}</p>\r\n        <p id='message'>{this.state.message}</p>\r\n        <div id='pawnChange' class={pawnChange}>\r\n          <p>Change Pawn to:</p>\r\n          <button id='queen' class='pawnChangeButton' onClick={this.changePawn('Q')}>Queen</button>\r\n          <button id='bishop' class='pawnChangeButton' onClick={this.changePawn('B')}>Bishop</button>\r\n          <button id='knight' class='pawnChangeButton' onClick={this.changePawn('N')}>Knight</button>\r\n          <button id='rook' class='pawnChangeButton' onClick={this.changePawn('R')}>Rook</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport './App.scss';\r\n\r\nimport Main from './Main'\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Main/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}