{"ast":null,"code":"import{canMove}from'./canMove';export var checkmate=function checkmate(board,turn){var tempTurn='White';if(turn==='White'){tempTurn='Black';}/*will search through and see if any piece can make a move that gets out of check*/for(var i=0;i<=7;i++){for(var j=0;j<=7;j++){if(board[i][j]!==' '&&board[i][j][0]!==turn[0]){for(var k=0;k<=7;k++){for(var m=0;m<=7;m++){if(canMove(board,i,j,k,m,tempTurn,false,[[,[,]],[,[,]]])){return false;}}}}}}return true;};","map":{"version":3,"sources":["C:/Users/paulm/OneDrive/Documents/GitHub/Chess/src/checkmate.js"],"names":["canMove","checkmate","board","turn","tempTurn","i","j","k","m"],"mappings":"AAAA,OAAQA,OAAR,KAAsB,WAAtB,CAEA,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAASC,KAAT,CAAgBC,IAAhB,CAAqB,CAE5C,GAAIC,CAAAA,QAAQ,CAAG,OAAf,CACA,GAAGD,IAAI,GAAK,OAAZ,CAAoB,CAClBC,QAAQ,CAAG,OAAX,CACD,CAED,mFACA,IAAI,GAAIC,CAAAA,CAAC,CAAG,CAAZ,CAAeA,CAAC,EAAI,CAApB,CAAuBA,CAAC,EAAxB,CAA2B,CACzB,IAAI,GAAIC,CAAAA,CAAC,CAAG,CAAZ,CAAeA,CAAC,EAAI,CAApB,CAAuBA,CAAC,EAAxB,CAA2B,CACzB,GAAGJ,KAAK,CAACG,CAAD,CAAL,CAASC,CAAT,IAAgB,GAAhB,EAAuBJ,KAAK,CAACG,CAAD,CAAL,CAASC,CAAT,EAAY,CAAZ,IAAmBH,IAAI,CAAC,CAAD,CAAjD,CAAqD,CACnD,IAAI,GAAII,CAAAA,CAAC,CAAG,CAAZ,CAAeA,CAAC,EAAI,CAApB,CAAuBA,CAAC,EAAxB,CAA2B,CACzB,IAAI,GAAIC,CAAAA,CAAC,CAAG,CAAZ,CAAeA,CAAC,EAAI,CAApB,CAAuBA,CAAC,EAAxB,CAA2B,CACzB,GAAGR,OAAO,CAACE,KAAD,CAAQG,CAAR,CAAWC,CAAX,CAAcC,CAAd,CAAiBC,CAAjB,CAAoBJ,QAApB,CAA8B,KAA9B,CAAqC,CAAC,EAAG,GAAH,CAAD,CAAU,EAAG,GAAH,CAAV,CAArC,CAAV,CAAmE,CACjE,MAAO,MAAP,CACD,CACF,CACF,CACF,CACF,CACF,CAED,MAAO,KAAP,CACD,CAvBM","sourcesContent":["import {canMove} from './canMove';\r\n\r\nexport const checkmate = function(board, turn){\r\n\r\n  var tempTurn = 'White'\r\n  if(turn === 'White'){\r\n    tempTurn = 'Black'\r\n  }\r\n\r\n  /*will search through and see if any piece can make a move that gets out of check*/\r\n  for(let i = 0; i <= 7; i++){\r\n    for(let j = 0; j <= 7; j++){\r\n      if(board[i][j] !== ' ' && board[i][j][0] !== turn[0]){\r\n        for(let k = 0; k <= 7; k++){\r\n          for(let m = 0; m <= 7; m++){\r\n            if(canMove(board, i, j, k, m, tempTurn, false, [[, [,]], [, [,]]])){\r\n              return false\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return true\r\n}\r\n"]},"metadata":{},"sourceType":"module"}