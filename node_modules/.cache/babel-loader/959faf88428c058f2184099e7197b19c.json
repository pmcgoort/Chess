{"ast":null,"code":"import _toConsumableArray from\"C:/Users/paulm/OneDrive/Documents/GitHub/Chess/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{check}from'./check';export var canMove=function canMove(board,k,m,i,j,turn,endOfTurn,canCastle){if(board[i][j][0]===board[k][m][0]){return false;}var canMove=false;switch(board[k][m][1]){/*Pawn*/case'P':if(m===j&&board[i][j]===' '){if(board[k][m][0]==='B'){if(i===k-1||i===k-2&&k===6){canMove=true;}}else{if(i===k+1||i===k+2&&k===1){canMove=true;}}}if(m===j+1||m===j-1){if(board[k][m][0]==='B'&&board[i][j][0]==='W'&&i===k-1){canMove=true;}else if(board[k][m][0]==='W'&&board[i][j][0]==='B'&&i===k+1){canMove=true;}}break;/*Rook*/case'R':var change=1;if(k===i){if(m===j){break;}if(m>j){change=-1;}canMove=true;for(var n=m+change;n!==j;n+=change){if(board[i][n]===' '){canMove=true;}else{canMove=false;break;}}}else if(m===j){if(k>i){change=-1;}canMove=true;for(var _n=k+change;_n!==i;_n+=change){if(board[_n][j]===' '){canMove=true;}else{canMove=false;break;}}}break;/*Knight*/case'N':var rowDiff=Math.abs(i-k);var colDiff=Math.abs(j-m);if(rowDiff===1&&colDiff===2||rowDiff===2&&colDiff===1){canMove=true;}break;/*Bishop*/case'B':if(Math.abs(i-k)===Math.abs(j-m)&&Math.abs(i-k)!==0){canMove=true;var rowChange=1;var colChange=1;if(i<k){rowChange=-1;}if(j<m){colChange=-1;}var rowSpot=k+rowChange;var colSpot=m+colChange;while(rowSpot!==i){if(board[rowSpot][colSpot]!==' '){canMove=false;}rowSpot+=rowChange;colSpot+=colChange;}}break;/*Queen*/case'Q':if(Math.abs(i-k)===Math.abs(j-m)&&Math.abs(i-k)!==0){canMove=true;var rowChange=1;var colChange=1;if(i<k){rowChange=-1;}if(j<m){colChange=-1;}var rowSpot=k+rowChange;var colSpot=m+colChange;while(rowSpot!==i){if(board[rowSpot][colSpot]!==' '){canMove=false;}rowSpot+=rowChange;colSpot+=colChange;}}if(!canMove){var change=1;if(k===i){if(m===j){break;}if(m>j){change=-1;}canMove=true;for(var _n2=m+change;_n2!==j;_n2+=change){if(board[i][_n2]===' '){canMove=true;}else{canMove=false;break;}}}else if(m===j){if(k>i){change=-1;}canMove=true;for(var _n3=k+change;_n3!==i;_n3+=change){if(board[_n3][j]===' '){canMove=true;}else{canMove=false;break;}}}}break;/*King*/case'K':if(Math.abs(i-k)<=1&&Math.abs(j-m)<=1){canMove=true;}/*castling*/var place=1;if(board[k][m][0]==='W'){place=0;}if(canCastle[place][0]){if(j===2&&canCastle[place][1][0]&&board[place*7][1]===' '&&board[place*7][2]===' '&&board[place*7][3]===' '){canMove=true;}if(j===6&&canCastle[place][1][1]&&board[place*7][5]===' '&&board[place*7][6]===' '){canMove=true;}}break;default:break;}/*checks if this move would put their own king into check*/if(!endOfTurn){var tempBoard=[];for(var _i=0;_i<=7;_i++){tempBoard.push(_toConsumableArray(board[_i]));}tempBoard[i][j]=tempBoard[k][m];tempBoard[k][m]=' ';var tempTurn;if(turn==='White'){tempTurn='Black';}else{tempTurn='White';}if(check(tempBoard,tempTurn)){canMove=false;}}return canMove;};","map":{"version":3,"sources":["C:/Users/paulm/OneDrive/Documents/GitHub/Chess/src/canMove.js"],"names":["check","canMove","board","k","m","i","j","turn","endOfTurn","canCastle","change","n","rowDiff","Math","abs","colDiff","rowChange","colChange","rowSpot","colSpot","place","tempBoard","push","tempTurn"],"mappings":"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","sourcesContent":["import {check} from './check';\r\n\r\nexport const canMove = function(board, k, m, i, j, turn, endOfTurn, canCastle) {\r\n\r\n  if (board[i][j][0] === board[k][m][0]) {\r\n    return false\r\n  }\r\n\r\n  var canMove = false\r\n  switch (board[k][m][1]) {\r\n    /*Pawn*/\r\n    case 'P':\r\n      if (m === j && board[i][j] === ' ') {\r\n        if (board[k][m][0] === 'B') {\r\n          if (i === k - 1 || (i === k - 2 && k === 6)) {\r\n            canMove = true\r\n          }\r\n        } else {\r\n          if (i === k + 1 || (i === k + 2 && k === 1)) {\r\n            canMove = true\r\n          }\r\n        }\r\n      }\r\n      if (m === j + 1 || m === j - 1) {\r\n        if (board[k][m][0] === 'B' && board[i][j][0] === 'W' && i === k - 1) {\r\n          canMove = true\r\n        } else if (board[k][m][0] === 'W' && board[i][j][0] === 'B' && i === k + 1) {\r\n          canMove = true\r\n        }\r\n      }\r\n\r\n      break\r\n\r\n      /*Rook*/\r\n    case 'R':\r\n      var change = 1\r\n      if (k === i) {\r\n        if (m === j) {\r\n          break\r\n        }\r\n        if (m > j) {\r\n          change = -1\r\n        }\r\n        canMove = true\r\n        for (let n = m + change; n !== j; n += change) {\r\n          if (board[i][n] === ' ') {\r\n            canMove = true\r\n          } else {\r\n            canMove = false\r\n            break\r\n          }\r\n        }\r\n      } else if (m === j) {\r\n        if (k > i) {\r\n          change = -1\r\n        }\r\n        canMove = true\r\n        for (let n = k + change; n !== i; n += change) {\r\n          if (board[n][j] === ' ') {\r\n            canMove = true\r\n          } else {\r\n            canMove = false\r\n            break\r\n          }\r\n        }\r\n      }\r\n      break\r\n\r\n      /*Knight*/\r\n    case 'N':\r\n      var rowDiff = Math.abs(i - k)\r\n      var colDiff = Math.abs(j - m)\r\n\r\n      if ((rowDiff === 1 && colDiff === 2) || (rowDiff === 2 && colDiff === 1)) {\r\n        canMove = true\r\n      }\r\n      break\r\n\r\n      /*Bishop*/\r\n    case 'B':\r\n      if (Math.abs(i - k) === Math.abs(j - m) && Math.abs(i - k) !== 0) {\r\n        canMove = true\r\n        var rowChange = 1\r\n        var colChange = 1\r\n        if (i < k) {\r\n          rowChange = -1\r\n        }\r\n        if (j < m) {\r\n          colChange = -1\r\n        }\r\n\r\n        var rowSpot = k + rowChange\r\n        var colSpot = m + colChange\r\n        while (rowSpot !== i) {\r\n          if (board[rowSpot][colSpot] !== ' ') {\r\n            canMove = false\r\n          }\r\n          rowSpot += rowChange\r\n          colSpot += colChange\r\n        }\r\n      }\r\n      break\r\n\r\n      /*Queen*/\r\n    case 'Q':\r\n      if (Math.abs(i - k) === Math.abs(j - m) && Math.abs(i - k) !== 0) {\r\n        canMove = true\r\n        var rowChange = 1\r\n        var colChange = 1\r\n        if (i < k) {\r\n          rowChange = -1\r\n        }\r\n        if (j < m) {\r\n          colChange = -1\r\n        }\r\n\r\n        var rowSpot = k + rowChange\r\n        var colSpot = m + colChange\r\n        while (rowSpot !== i) {\r\n          if (board[rowSpot][colSpot] !== ' ') {\r\n            canMove = false\r\n          }\r\n          rowSpot += rowChange\r\n          colSpot += colChange\r\n        }\r\n      }\r\n      if (!canMove) {\r\n        var change = 1\r\n        if (k === i) {\r\n          if (m === j) {\r\n            break\r\n          }\r\n          if (m > j) {\r\n            change = -1\r\n          }\r\n          canMove = true\r\n          for (let n = m + change; n !== j; n += change) {\r\n            if (board[i][n] === ' ') {\r\n              canMove = true\r\n            } else {\r\n              canMove = false\r\n              break\r\n            }\r\n          }\r\n        } else if (m === j) {\r\n          if (k > i) {\r\n            change = -1\r\n          }\r\n          canMove = true\r\n          for (let n = k + change; n !== i; n += change) {\r\n            if (board[n][j] === ' ') {\r\n              canMove = true\r\n            } else {\r\n              canMove = false\r\n              break\r\n            }\r\n          }\r\n        }\r\n      }\r\n      break\r\n\r\n      /*King*/\r\n    case 'K':\r\n      if (Math.abs(i - k) <= 1 && Math.abs(j - m) <= 1) {\r\n        canMove = true\r\n      }\r\n\r\n      /*castling*/\r\n      var place = 1\r\n      if(board[k][m][0] === 'W'){\r\n        place = 0\r\n      }\r\n      if(canCastle[place][0]){\r\n        if(j === 2 && canCastle[place][1][0] && board[place * 7][1] === ' ' && board[place * 7][2] === ' ' && board[place * 7][3] === ' '){\r\n          canMove = true\r\n        }\r\n        if(j === 6 && canCastle[place][1][1] && board[place * 7][5] === ' ' && board[place * 7][6] === ' '){\r\n          canMove = true\r\n        }\r\n      }\r\n\r\n      break;\r\n\r\n    default:\r\n      break\r\n  }\r\n\r\n\r\n  /*checks if this move would put their own king into check*/\r\n  if(!endOfTurn){\r\n    var tempBoard = []\r\n    for(let i = 0; i <= 7; i++){\r\n      tempBoard.push([...board[i]])\r\n    }\r\n    tempBoard[i][j] = tempBoard[k][m]\r\n    tempBoard[k][m] = ' '\r\n\r\n    var tempTurn\r\n    if(turn === 'White'){\r\n      tempTurn = 'Black'\r\n    } else {\r\n      tempTurn = 'White'\r\n    }\r\n\r\n    if(check(tempBoard, tempTurn)){\r\n      canMove = false\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  return canMove\r\n}\r\n"]},"metadata":{},"sourceType":"module"}